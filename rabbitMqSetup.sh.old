#!/bin/bash
RED='\033[0;31m'
NC='\033[0m'
if [[ "$UID" != 0 ]] ; then
	echo -e "${RED}[ERRORE]${NC} Questo script ha bisogno dei privilegi di root per essere eseguito"
	exit
fi
apt update
apt upgrade -y
apt install ca-certificates curl gnupg lsb-release -y
mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
apt update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
#docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3.11-management
mkdir dockerfiles/
mkdir dockerfiles/rabbitmq/
mkdir dockerfiles/rabbitmq/data
mkdir dockerfiles/rabbitmq/log
chown -R 999:999 dockerfiles/
docker compose up -d
echo "sleeping for 3 seconds"
sleep 3
docker exec -it rabbitmq rabbitmq-plugins enable rabbitmq_mqtt
docker exec -it rabbitmq rabbitmqctl add_user mqtt-server1 mqtt-server1
docker exec -it rabbitmq rabbitmqctl set_permissions -p / mqtt-server1 ".*" ".*" ".*"
docker exec -it rabbitmq rabbitmqctl set_user_tags mqtt-server1 management
echo "sleeping for 10 seconds"
sleep 10
docker restart rabbitmq
# chmod u+x test.sh
# sudo vi /etc/sudoers copia incolla camibando username
